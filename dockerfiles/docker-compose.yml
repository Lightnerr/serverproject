version: "3"
services:    
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    network_mode: bridge
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8000:8000/tcp # Built-in HTTP control server
      - 7878:7878/tcp # Radarr
      - 8989:8989/tcp # Sonarr
      - 9117:9117/tcp # Jackett
      - 9091:9091/tcp # Transmission
      - 51413:51413/tcp # Transmission
      - 51413:51413/udp # Transmission
    volumes:
      - ${PATHDIR}/appdata/gluetun/:/gluetun
    secrets:
      - openvpn_user
      - openvpn_password
    environment:
      # More variables are available, see the readme table
      - VPNSP=nordvpn
      - REGION=Netherlands
      # Timezone for accurate logs times
      - TZ=${TZ}
    restart: always
    
    
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - UMASK=022
      - TZ=${TZ}
    ports:
      - 32400:32400/tcp
    volumes:
      - ${PATHDIR}/appdata/plex:/config
      - ${PATHDIR}/media/tv/:/tv
      - ${PATHDIR}/media/movies/:/movies
    restart: unless-stopped
    
    
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 853:853/tcp
      - 3000:3000/tcp
    volumes:
      - ${PATHDIR}/appdata/adguardhome/workdir/:/opt/adguardhome/work
      - ${PATHDIR}/appdata/adguardhome/confdir/:/opt/adguardhome/conf
    restart: unless-stopped    
    
    
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PATHDIR}/appdata/heimdall/:/config
    ports:
      - 5000:80
    restart: unless-stopped
    
    
  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PATHDIR}/appdata/transmission:/config
      - ${PATHDIR}/downloads/completed:/downloads
      - ${PATHDIR}/downloads/watch:/watch
    network_mode: service:gluetun
    depends_on:
      - gluetun
    restart: unless-stopped
    
  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ${PATHDIR}/appdata/jackett:/config
      - ${PATHDIR}/downloads/watch:/downloads
    network_mode: service:gluetun
    depends_on:
      - gluetun
    restart: unless-stopped
      
      
  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    - UMASK_SET=022
    volumes:
      - ${PATHDIR}/appdata/radarr:/config
      - ${PATHDIR}/media/movies:/movies
      - ${PATHDIR}/downloads/completed:/downloads
    network_mode: service:gluetun
    depends_on:
      - gluetun
    restart: unless-stopped
      
      
  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${PATHDIR}/appdata/sonarr:/config
      - ${PATHDIR}/media/tv:/tv
      - ${PATHDIR}/downloads/completed:/downloads
    network_mode: service:gluetun
    depends_on:
      - gluetun
    restart: unless-stopped
      
  duplicati:
    image: ghcr.io/linuxserver/duplicati
    container_name: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PATHDIR}/appdata/duplicati:/config
      - ${PATHDIR}/backups:/backups
      - ${PATHDIR}/appdata:/source
    ports:
      - 8200:8200
    restart: unless-stopped
    
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --debug --cleanup radarr sonarr jackett plex transmission #auto update these containers

secrets:
  openvpn_user:
    file: ./openvpn_user.txt
  openvpn_password:
    file: ./openvpn_password.txt